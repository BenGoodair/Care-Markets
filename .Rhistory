mutate(age = as.numeric(age),
mx = dead_t / (alive_t + dead_t / 2)) %>%
ungroup() %>%
mutate(mx = replace(mx, is.nan(mx) | is.infinite(mx), 0))
# Calculate mx
all_df <- all_df %>%
group_by(year, age, sex) %>%
mutate(age = as.numeric(age),
mx = dead_t / (alive_t + dead_t / 2)) %>%
ungroup() %>%
mutate(mx = replace(mx, is.nan(mx) | is.infinite(mx), 0))
# Fill missing values by carrying forward
all_df <- all_df %>%
arrange(sex, year, age) %>%
group_by(sex, year) %>%
fill(mx, alive_t, dead_t, .direction = "down") %>%
ungroup()
all_df <- full_join(Deaths_1x1, pop1x1, by = c("age","year", "sex"))%>%
dplyr::filter(year>1970)
# Calculate mx
all_df <- all_df %>%
group_by(year, age, sex) %>%
mutate(age = as.numeric(age),
mx = dead_t / (alive_t + dead_t / 2)) %>%
ungroup() %>%
mutate(mx = replace(mx, is.nan(mx) | is.infinite(mx), 0))
# Fill missing values by carrying forward
all_df <- all_df %>%
arrange(sex, year, age) %>%
group_by(sex, year) %>%
fill(mx, alive_t, dead_t, .direction = "down") %>%
ungroup()
# Set ax values (default 0.5 except for infants)
all_df <- all_df %>%
mutate(ax = ifelse(age == 0,
ifelse(sex == "Male", 0.14929 - 1.99646 * mx,
0.14903 - 2.05527 * mx), 0.5))
# Calculate qx
all_df <- all_df %>%
mutate(qx = mx / (1 + (1 - ax) * mx)) %>%
mutate(qx = replace(qx, is.infinite(qx), NA)) %>%
fill(qx, .direction = "down")
# Calculate lx and dx
all_df <- all_df %>%
group_by(sex, year) %>%
mutate(lx = 100000,
dx = qx * lx) %>%
ungroup()
# Function to calculate lx and dx for all ages
calc_lx_dx <- function(df) {
df <- df %>% arrange(year, age)
for (i in 2:nrow(df)) {
if (df$age[i] != 0) {
df$lx[i] <- df$lx[i - 1] - df$dx[i - 1]
df$dx[i] <- df$qx[i] * df$lx[i]
}
}
return(df)
}
# Apply to male and female separately
female_df <- calc_lx_dx(all_df %>% filter(sex == "Female"))
male_df <- calc_lx_dx(all_df %>% filter(sex == "Male"))
# Function to calculate lx and dx for all ages
calc_lx_dx <- function(df) {
df <- df %>% arrange(year, age)
for (i in 2:nrow(df)) {
if (df$age[i] != 0) {
df$lx[i] <- df$lx[i - 1] - df$dx[i - 1]
df$dx[i] <- df$qx[i] * df$lx[i]
}
}
return(df)
}
# Apply to male and female separately
female_df <- calc_lx_dx(all_df %>% filter(sex == "Female"))
all_df
# Apply to male and female separately
female_df <- calc_lx_dx(all_df %>% filter(sex == "Female"))
df = all_df
# Apply to male and female separately
female_df <- calc_lx_dx(df %>% filter(sex == "Female"))
calc_lx_dx <- function(df) {
df <- df %>% arrange(year, age)
for (i in 2:nrow(df)) {
if (df$age[i] != 0) {
df$lx[i] <- df$lx[i - 1] - df$dx[i - 1]
df$dx[i] <- df$qx[i] * df$lx[i]
}
}
return(df)
}
# Apply to male and female separately
female_df <- calc_lx_dx(df %>% filter(sex == "Female"))
# Function to calculate lx and dx for all ages
calc_lx_dx <- function(df) {
df <- df %>% arrange(year, age)
for (i in 2:105) {
if (df$age[i] != 0) {
df$lx[i] <- df$lx[i - 1] - df$dx[i - 1]
df$dx[i] <- df$qx[i] * df$lx[i]
}
}
return(df)
}
# Apply to male and female separately
female_df <- calc_lx_dx(df %>% filter(sex == "Female"))
male_df <- calc_lx_dx(all_df %>% filter(sex == "Male"))
# Combine male and female data
all_df <- bind_rows(female_df, male_df)
# Calculate tx and ex
all_df <- all_df %>%
group_by(year, sex) %>%
mutate(tx = rev(cumsum(rev(lx))),
ex = tx / lx) %>%
ungroup()
correct_life_tables <- read_table("~/Library/CloudStorage/OneDrive-Nexus365/Documents/Migration_LE_project/Data/fltper_1x1.txt",
skip = 1)%>%
dplyr::filter(Year>1970)%>%
dplyr::rename(year=Year,
age=Age,
ex_comp = ex) %>%
dplyr::select(year, age, ex_comp)
yesplz <- merge(all_df[all_df$sex=="Female",], correct_life_tables, by=c("age", "year"), all=T)%>%
dplyr::mutate(diff = ex-ex_comp)
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
xlim(c(1972,2018))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
coord_cortisan(xlim(c(1972,2018)))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
coord_cartesian(xlim(c(1972,2018)))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
coord_cartesian(xlim =c(1972,2018))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
coord_cartesian(xlim =c(1975,2018))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
xlim(c(1972,2018))+
ylim(c(-1,1))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
xlim(c(1972,2018))+
ylim(c(-10,10))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
xlim(c(1972,2018))+
ylim(c(-10,30))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
xlim(c(1972,2018))+
ylim(c(-10,35))
Deaths_1x1 <- read_table("~/Library/CloudStorage/OneDrive-Nexus365/Documents/Migration_LE_project/Data/Deaths_1x1.txt",
skip = 1)%>%
dplyr::select(-Total)%>%
tidyr::pivot_longer(cols = c(Male, Female), names_to = "sex",  values_to = "dead_t")%>%
dplyr::rename(age=Age,
year=Year)
pop1x1 <- read_table("~/Library/CloudStorage/OneDrive-Nexus365/Documents/Migration_LE_project/Data/Population.txt",
skip = 1)%>%
dplyr::select(-Total)%>%
tidyr::pivot_longer(cols = c(Male, Female), names_to = "sex",  values_to = "alive_t")%>%
dplyr::rename(age=Age,
year=Year)
all_df <- full_join(Deaths_1x1, pop1x1, by = c("age","year", "sex"))%>%
dplyr::filter(year>1970)
all_df <- all_df %>%
dplyr::group_by(year, age, sex)%>%
dplyr::mutate(mx = dead_t/(alive_t+(dead_t/2)))%>%
dplyr::ungroup()
#IMPORTANT: I'm doing something I don't trust!#
#Here I impute missing values for previous ages downwards#
#so if we observe no one aged 98, values for those age 97 are imputed in#
#I also replace values where there are 0 deaths from NaN (cos u can't divide 0) with 0#
#for full pop this is not that many - just Men in early 70s aged over 100
# for location specific, it becomes more frequent
full_vals <- as.data.frame(cbind(rep(0:105, times=2),
rep(c("Male", "Female"), each=106)))
years <-  as.data.frame(cbind(rep(1971:2017, times=106),
rep(0:105, times=47)))
names(full_vals) <- c("age", "sex")
names(years) <- c("year", "age")
full_vals <- merge(full_vals, years, by="age", all=T)
all_df <- all_df %>%
####age needs numeric you idiot!!!####
dplyr::mutate(age=as.numeric(age))%>%
dplyr::filter(age<106)
all_df <- merge(all_df, full_vals, by=c("age", "year", "sex"), all=T)
all_df <- all_df %>%
dplyr::mutate(mx = ifelse(mx=="NaN", 0, mx),
age = as.numeric(age))%>%
dplyr::arrange(sex,year, age)%>%
tidyr::fill(mx, .direction = "down")%>% # should we take x=(x-1) t=t?...x=x; t=(t-1); (average before and after x + t!!)
tidyr::fill(alive_t, .direction = "down")%>%
tidyr::fill(dead_t, .direction = "down")
#calculate ax: according to Jons resource - we can set aqx = 0.5 apart from for infants
#justification: infants will not die on average at age 0.5 - so we don't want to take middle value.
#using Jon's resource (assuming smallest value of mortality -check and print here)
#M0 = mean(all_df[all_df$age==0,]$dead_t/(all_df[all_df$age==0,]$alive_t+(all_df[all_df$age==0,]$dead_t/2)))
#0.004179064
#for males = mean(all_df[all_df$age==0&all_df$sex=="Male",]$dead_t/(all_df[all_df$age==0&all_df$sex=="Male",]$alive_t+(all_df[all_df$age==0&all_df$sex=="Male",]$dead_t/2)))
#0.004781484
#for females =  mean(all_df[all_df$age==0&all_df$sex=="Female",]$dead_t/(all_df[all_df$age==0&all_df$sex=="Female",]$alive_t+(all_df[all_df$age==0&all_df$sex=="Female",]$dead_t/2)))
#0.003576645
#so smallest level:
#0.14929-1.99646*m0 = a for males
#0.14903-2.05527*m0 = a for females
#first I make a=0.5 then adjust for all years/sex obs of age==0
all_df <- all_df %>%
dplyr::mutate(ax = 0.5)
for (i in c(1971:2017)) {
all_df[all_df$age==0&all_df$sex=="Male"&all_df$year==i,]$ax <- 0.14929-1.99646* all_df[all_df$age==0&all_df$sex=="Male"&all_df$year==i,]$mx
}
for (i in c(1971:2017)) {
all_df[all_df$age==0&all_df$sex=="Female"&all_df$year==i,]$ax <- 0.14929-1.99646* all_df[all_df$age==0&all_df$sex=="Female"&all_df$year==i,]$mx
}
#assumptions I made above - different a0 for all years - think that's right...
#calculate qx
#qx = 2*mx/(2+mx) - according to ONS guidance
#qx = mx/1+(1-ax)*mx - according to Jon's resource
#ons requires knowledge of month of death for infant smoothing - so we use Jon's resource
all_df <- all_df %>%
dplyr::group_by(year, age, sex)%>%
dplyr::mutate(qx = mx/1+(1-ax)/(alive_t+(dead_t/2)))%>% # mx formula
dplyr::ungroup()
#we need non inf qx, so replace inf qx with previous non inf value
all_df <- all_df %>%
dplyr::mutate(qx = ifelse(qx==Inf, NA, qx))%>%
tidyr::fill(qx, .direction = "down")
####Again - first understand why inf - then average of info from neighbouring petals - think through log vs straight####
#lx = out of 100,000 alive at age zero, how many live to next age
#using 100,000 to compare to ONS
#l0 = 100000
#lx+1 = lx-dx
#dx = qx*lx
#d0 = q0*100000
#first create the correct value for age 0
all_df <- all_df %>%
dplyr::mutate(lx = 100000,
dx = qx*lx)
#split into male and female to prevent triple loop
female_df <- all_df[all_df$sex=="Female",]
male_df <- all_df[all_df$sex=="Male",]
#Old note below - reason for imputation:
#pretty sure this is not legit - loops don't work if there is not x-1
# so should have zeros imputed
# but I'm literally dying, feeling so stressed and sad, let me out this box pleaassseee
#create new df to bind together subsequent years
one <- female_df[female_df$age==0,]
#for each year and age, re-write lx with lx-1 - dx-1
for (y in c(1971:2017)) {
for (i in c(1:105)) {
female_age_df <- female_df %>%
dplyr::filter(age==i, year==y)%>%
dplyr::mutate(lx = one[one$age==(i-1)&one$year==y,]$lx- one[one$age==(i-1)&one$year==y,]$dx,
dx = qx*lx)
one <- rbind(one, female_age_df)
}}
#repeat for males
two <- male_df[male_df$age==0,]
for (y in c(1971:2017)) {
for (i in c(1:105)) {
male_age_df <- male_df %>%
dplyr::filter(age==i, year==y)%>%
dplyr::mutate(lx = two[two$age==(i-1)&two$year==y,]$lx- two[two$age==(i-1)&two$year==y,]$dx,
dx = qx*lx)
two <- rbind(two, male_age_df)
}}
#calcualte Lx = the number of person-years lived between exact ages x and x+1.
one <- one %>%dplyr::mutate(Lx= lx-.5*dx)
two <- two %>%dplyr::mutate(Lx= lx-.5*dx)
#deleted pre 25/03
#one <- one %>%dplyr::mutate(Lx= lx-ax*dx)
#two <- two %>%dplyr::mutate(Lx= lx-ax*dx)
#calculate tx
#where tx = total summed Lx for age x and all older ages
#female
#set age 0
one <- one %>%
dplyr::group_by(year)%>%
dplyr::mutate(tx = sum(Lx,na.rm =T))%>%
dplyr::ungroup()
#create age 0 df for binding
onepls <- one[one$age==0,]
#for each year and age, rewrite tx to sum of lx where age>=x
for (y in c(1971:2017)) {
for (i in c(1:105)) {
one_age <- one %>%
dplyr::filter(age==i, year==y)%>%
dplyr::mutate(tx = sum(one[one$age>=i&one$year==y,]$Lx, na.rm=T))
onepls <- rbind(onepls, one_age)
}}
#repeat for male
two <- two %>%
dplyr::group_by(year)%>%
dplyr::mutate(tx = sum(Lx,na.rm =T)-100000)%>%
dplyr::ungroup()
twopls <- two[two$age==0,]
for (y in c(1971:2017)) {
for (i in c(1:105)) {
twoage <- two %>%
dplyr::filter(age==i, year==y)%>%
dplyr::mutate(tx = sum(two[two$age>=i&two$year==y,]$Lx, na.rm=T))
twopls <- rbind(twopls, twoage)
}}
#bind it altogether baby and calculate ex, where ex = tx/lx
final_life_tables <- rbind(onepls%>%
dplyr::mutate(ex = tx/lx),
twopls%>%
dplyr::mutate(ex = tx/lx))
ggplot(final_life_tables[final_life_tables$age==0,], aes(x=year, y=ex, colour=sex))+
geom_line()
correct_life_tables <- read_table("~/Library/CloudStorage/OneDrive-Nexus365/Documents/Migration_LE_project/Data/fltper_1x1.txt",
skip = 1)%>%
dplyr::filter(Year>1970)%>%
dplyr::rename(year=Year,
age=Age,
ex_comp = ex) %>%
dplyr::select(year, age, ex_comp)
yesplz <- merge(final_life_tables[final_life_tables$sex=="Female",], correct_life_tables, by=c("age", "year"), all=T)%>%
dplyr::mutate(diff = ex-ex_comp)
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")
####bootstrap code wtf #####
Deaths_1x1 <- read_table("~/Library/CloudStorage/OneDrive-Nexus365/Documents/Migration_LE_project/Data/Deaths_1x1.txt",
skip = 1)%>%
dplyr::select(-Total)%>%
tidyr::pivot_longer(cols = c(Male, Female), names_to = "sex",  values_to = "dead_t")%>%
dplyr::rename(age=Age,
year=Year)
pop1x1 <- read_table("~/Library/CloudStorage/OneDrive-Nexus365/Documents/Migration_LE_project/Data/Population.txt",
skip = 1)%>%
dplyr::select(-Total)%>%
tidyr::pivot_longer(cols = c(Male, Female), names_to = "sex",  values_to = "alive_t")%>%
dplyr::rename(age=Age,
year=Year)
all_df2 <- full_join(Deaths_1x1, pop1x1, by = c("age","year", "sex"))%>%
dplyr::filter(year>1970)
# Calculate mx
all_df2 <- all_df2 %>%
group_by(year, age, sex) %>%
mutate(age = as.numeric(age),
mx = dead_t / (alive_t + dead_t / 2)) %>%
ungroup() %>%
mutate(mx = replace(mx, is.nan(mx) | is.infinite(mx), 0))
# Fill missing values by carrying forward
all_df2 <- all_df2 %>%
arrange(sex, year, age) %>%
group_by(sex, year) %>%
fill(mx, alive_t, dead_t, .direction = "down") %>%
ungroup()
# Set ax values (default 0.5 except for infants)
all_df2 <- all_df2 %>%
mutate(ax = ifelse(age == 0,
ifelse(sex == "Male", 0.14929 - 1.99646 * mx,
0.14903 - 2.05527 * mx), 0.5))
# Calculate qx
all_df2 <- all_df2 %>%
mutate(qx = mx / (1 + (1 - ax) * mx)) %>%
mutate(qx = replace(qx, is.infinite(qx), NA)) %>%
fill(qx, .direction = "down")
# Calculate lx and dx
all_df2 <- all_df2 %>%
group_by(sex, year) %>%
mutate(lx = 100000,
dx = qx * lx) %>%
ungroup()
# Function to calculate lx and dx for all ages
#######HERE!!!!! changed i in 2:nrow to 105########
calc_lx_dx <- function(df) {
df <- df %>% arrange(year, age)
for (i in 2:105) {
if (df$age[i] != 0) {
df$lx[i] <- df$lx[i - 1] - df$dx[i - 1]
df$dx[i] <- df$qx[i] * df$lx[i]
}
}
return(df)
}
df = all_df2
# Apply to male and female separately
female_df <- calc_lx_dx(df %>% filter(sex == "Female"))
male_df <- calc_lx_dx(all_df2 %>% filter(sex == "Male"))
# Combine male and female data
all_df2 <- bind_rows(female_df, male_df)
# Calculate tx and ex
all_df2 <- all_df2 %>%
group_by(year, sex) %>%
mutate(tx = rev(cumsum(rev(lx))),
ex = tx / lx) %>%
ungroup()
correct_life_tables <- read_table("~/Library/CloudStorage/OneDrive-Nexus365/Documents/Migration_LE_project/Data/fltper_1x1.txt",
skip = 1)%>%
dplyr::filter(Year>1970)%>%
dplyr::rename(year=Year,
age=Age,
ex_comp = ex) %>%
dplyr::select(year, age, ex_comp)
yesplz <- merge(all_df[all_df$sex=="Female",], correct_life_tables, by=c("age", "year"), all=T)%>%
dplyr::mutate(diff = ex-ex_comp)
View(all_df)
View(all_df2)
View(final_life_tables)
all_df2 <- full_join(Deaths_1x1, pop1x1, by = c("age","year", "sex"))%>%
dplyr::filter(year>1970)
# Calculate mx
all_df2 <- all_df2 %>%
group_by(year, age, sex) %>%
mutate(age = as.numeric(age),
mx = dead_t / (alive_t + dead_t / 2)) %>%
ungroup() %>%
mutate(mx = replace(mx, is.nan(mx) | is.infinite(mx), 0))
# Fill missing values by carrying forward
all_df2 <- all_df2 %>%
arrange(sex, year, age) %>%
group_by(sex, year) %>%
fill(mx, alive_t, dead_t, .direction = "down") %>%
ungroup()
# Set ax values (default 0.5 except for infants)
all_df2 <- all_df2 %>%
mutate(ax = ifelse(age == 0,
ifelse(sex == "Male", 0.14929 - 1.99646 * mx,
0.14903 - 2.05527 * mx), 0.5))
#####HEREEEE qx = mx/1+(1-ax)/(alive_t+(dead_t/2))#####
# Calculate qx
all_df2 <- all_df2 %>%
mutate(qx = mx/1+(1-ax)/(alive_t+(dead_t/2))) %>%
mutate(qx = replace(qx, is.infinite(qx), NA)) %>%
fill(qx, .direction = "down")
# Calculate lx and dx
all_df2 <- all_df2 %>%
group_by(sex, year) %>%
mutate(lx = 100000,
dx = qx * lx) %>%
ungroup()
# Function to calculate lx and dx for all ages
#######HERE!!!!! changed i in 2:nrow to 105########
calc_lx_dx <- function(df) {
df <- df %>% arrange(year, age)
for (i in 2:105) {
if (df$age[i] != 0) {
df$lx[i] <- df$lx[i - 1] - df$dx[i - 1]
df$dx[i] <- df$qx[i] * df$lx[i]
}
}
return(df)
}
df = all_df2
# Apply to male and female separately
female_df <- calc_lx_dx(df %>% filter(sex == "Female"))
male_df <- calc_lx_dx(all_df2 %>% filter(sex == "Male"))
# Combine male and female data
all_df2 <- bind_rows(female_df, male_df)
# Apply to male and female separately
female_df <- calc_lx_dx(all_df2 %>% filter(sex == "Female"))
male_df <- calc_lx_dx(all_df2 %>% filter(sex == "Male"))
# Combine male and female data
all_df2 <- bind_rows(female_df, male_df)
# Calculate tx and ex
all_df2 <- all_df2 %>%
group_by(year, sex) %>%
mutate(tx = rev(cumsum(rev(lx))),
ex = tx / lx) %>%
ungroup()
correct_life_tables <- read_table("~/Library/CloudStorage/OneDrive-Nexus365/Documents/Migration_LE_project/Data/fltper_1x1.txt",
skip = 1)%>%
dplyr::filter(Year>1970)%>%
dplyr::rename(year=Year,
age=Age,
ex_comp = ex) %>%
dplyr::select(year, age, ex_comp)
yesplz <- merge(all_df[all_df$sex=="Female",], correct_life_tables, by=c("age", "year"), all=T)%>%
dplyr::mutate(diff = ex-ex_comp)
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
xlim(c(1972,2018))+
ylim(c(-10,35))
ggplot(yesplz[yesplz$year<2018,], aes(x=year, y=diff, colour=as.numeric(age)))+
geom_point()+
theme_bw()+
labs(y="Difference in life expectancy from HMD methods")+
xlim(c(1972,2018))+
ylim(c(-1,1))
